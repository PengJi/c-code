void LinkedList_Merge_Sort1(LinkedList &L){
	//链表结构上的归并排序非递归算法
	for(l=1;l<L.length;l*=2)
		for(p=L->next,e2=p;p->next;p=e2){
			for(i=1,q=p;i<=l&&q->next;i++,q=q->next);
			e1=q;
			for(i=1;i<=l&&q->next;i++,q=q->next);
			e2=q;
			if(e1!=e2) 
				LinkedList_Merge(L,p,e1,e2);
		}
}
void LinkedList_Merge(LinkedList &L,LNode *p,LNode *e1,LNode *e2){
	//对链表上的子序列进行归并
	q=p->next;
	r=e1->next;
	while(q!=e1->next&&r!=e2->next){
		if(q->data<r->data){
			p->next=q;
			p=q;
			q=q->next;
		}else{
			p->next=r;
			p=r;
			r=r->next;
		}
	}
	while(q!=e1->next){
		p->next=q;
		p=q;
		q=q->next;
	}
	while(r!=e2->next){
		p->next=r;
		p=r;
		r=r->next;
	}
}